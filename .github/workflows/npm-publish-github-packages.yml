name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 20.10.0
      uses: actions/setup-node@v2
      with:
        node-version: 20.10.0
    - name: Install package
      run: cd src/api && npm install
    - name: Testing
      run: cd src/api && npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            cd src/
            docker login --username=${{ secrets.DOCKER_USERNAME }}  --password=${{ secrets.DOCKER_PASSWORD }}
        - name: Build and Publish
          run: |
            cd src/
            docker build . --tag ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
            docker push ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
  deploy:
        needs: build
        name: deploy image
        runs-on: ubuntu-latest
        steps:
        # ssh vpn is needed only if you can not directly connect to the `SSH_HOST`
        - name: ssh vpn
          run: |
            echo "${{ secrets.SSH_VPN_1_PRIVATE_KEY }}" > ssh_vpn_1.pem
            chmod 600 ssh_vpn_1.pem
            ssh -i ssh_vpn_1.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_VPN_1_USER }}@${{ secrets.SSH_VPN_1_HOST }}
        - name: install ssh keys
          run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > test.pem
            chmod 600 test.pem
            cat test.pem
        - name: connect and pull
          run: ssh -i test.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh
